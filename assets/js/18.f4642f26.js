(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{180:function(t,a,n){"use strict";n.r(a);var s=n(20),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"serialization"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#serialization","aria-hidden":"true"}},[t._v("#")]),t._v(" Serialization")]),t._v(" "),n("h2",{attrs:{id:"serializing-to-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#serializing-to-json","aria-hidden":"true"}},[t._v("#")]),t._v(" Serializing to JSON")]),t._v(" "),n("p",[t._v("To convert a model to JSON – Plain Object –, you can use "),n("code",[t._v("$toJson")]),t._v(" method. The "),n("code",[t._v("$toJson")]),t._v(" method is recursive, so all attributes and relations are going to be converted to JSON as well.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" json "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("$toJson")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/*\n  {\n    id: 1,\n    name: 'John Doe',\n    profile: {\n      id: 1,\n      user_id: 1,\n      age: 24,\n      sex: 'male'\n    }\n  }\n*/")]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);